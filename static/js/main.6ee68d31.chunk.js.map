{"version":3,"sources":["Component/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["editIdElement","jsonMas","suffix","map","item","id","createNewMass","newElem","iconsRightFull","unshift","Logo","img","title","className","src","ElementLi","imgSrc","text","isTitle","wrapper","NavItem","elements","addElem","classList","main","child","listElements","elem","Header","props","useState","data","setData","useEffect","logo","iconsLeft","coins","iconsRight","menuIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ee68d31.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Header.scss\";\n\nconst editIdElement = (jsonMas, suffix) => {\n    let jsonNewMass = jsonMas.map(item => {\n        return {\n            ...item, \n            id: item.id + suffix\n        }\n    })\n\n    return jsonNewMass\n}\n\nconst createNewMass = (jsonMas, newElem) => {\n    const iconsRightFull = jsonMas.map(item =>{\n        return {\n            ...item\n        }\n      })\n      iconsRightFull.unshift(newElem)\n    \n    return iconsRightFull\n}\n\n\nconst Header = (props) => {\n  const [data, setData] = useState(props.data);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  const { logo, iconsLeft, coins, iconsRight, menuIcons } = data;\n\n  \n\n  return (\n    <header className=\"header\">\n      <div className=\"header_wrapper\">\n        <div className=\"header_inner\">\n          <Logo id={logo.id} img={logo.img} title={logo.title} />\n          <nav id=\"nav\" className=\"nav\">\n            <ul id=\"active_elem_menu\" className=\"nav_item\"></ul>\n            <NavItem\n              id=\"nav_left\"\n              elements={iconsLeft}\n              classList={{\n                  main: 'nav_item nav_item--left',\n                  child: {\n                      wrapper: 'nav_link',\n                      img: 'nav_link_img',\n                      title: 'nav_link_title'\n                  }\n              }}\n              isTitle={true}\n            />\n            <NavItem\n              id=\"nav_right\"\n              elements={iconsRight}\n              addElem={{\n                elem: coins,\n                classList: {\n                    wrapper: 'nav_link',\n                    img: 'nav_link_coins',\n                    title: 'nav_link_counter_coins'\n                }\n              }}\n              classList={{\n                main: 'nav_item nav_item--right',\n                child: {\n                    wrapper: 'nav_link',\n                    img: 'nav_link_img',\n                    title: 'nav_link_title'\n                }\n              }}\n              isTitle={false}\n            />\n            <NavItem\n              id=\"menu_icon\"\n              elements={menuIcons}\n              classList={{\n                main: 'nav_item',\n                child: {\n                    wrapper: 'nav_menu_icon',\n                    img: 'nav_menu_icon_img',\n                    title: 'nav_link_title'\n                }\n              }}\n              isTitle={true}\n            />\n          </nav>\n        </div>\n        <NavItem id=\"nav_menu_left\"\n                 elements={editIdElement(iconsLeft, '_menu')}\n                 classList={{\n                     main: 'nav_menu_item nav_menu_item--left',\n                     child: {\n                         wrapper: 'nav_menu_link',\n                         img: 'nav_menu_img',\n                         title: 'nav_menu_title'\n                     }\n                 }}\n                 isTitle={true}\n        />\n        <NavItem id=\"nav_menu_right\"\n                 elements={editIdElement(createNewMass(iconsRight, coins), '_menu')}\n                 classList={{\n                     main: 'nav_menu_item nav_menu_item--right',\n                     child: {\n                         wrapper: 'nav_menu_link',\n                         img: 'nav_menu_img',\n                         title: 'nav_menu_title'\n                     }\n                 }}\n                 isTitle={true}\n        />\n      </div>\n    </header>\n  );\n};\n\nconst Logo = ({ img, title, id }) => {\n  return (\n    <div id={id} className=\"header_logo\">\n      <img className=\"header_logo_img\" src={img} />\n      <span className=\"header_logo_title\">{title}</span>\n    </div>\n  );\n};\n\nconst ElementLi = ({ imgSrc, text, id, className, isTitle }) => {\n  const {wrapper, img, title} = className\n  return (\n    <li id={id} className={`${wrapper} ${wrapper}--${id}`}>\n      <img className={img} src={imgSrc} />\n      {isTitle ? <span className={title}>{text}</span> : null}\n    </li>\n  );\n};\n\nconst NavItem = ({ elements, id, addElem, classList, isTitle }) => {\n  const {main, child} = classList\n  const listElements = elements.map((item) => (\n    <ElementLi\n      key={item.id}\n      id={item.id}\n      imgSrc={item.img}\n      text={item.title}\n      className={child}\n      isTitle={isTitle}\n    />\n  ));\n  return (\n    <ul id={id} className={main}>\n      {addElem ? \n        <ElementLi\n          id={addElem.elem.id}\n          imgSrc={addElem.elem.img}\n          text={addElem.elem.title}\n          isTitle={!isTitle}\n          className={addElem.classList}\n        />\n       : null}\n      {listElements}\n    </ul>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./Component/Header/Header\";\nimport data from \"./JSON/data.json\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}